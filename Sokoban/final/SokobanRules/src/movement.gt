import "http://www.eclipse.org/emf/2002/Ecore"
import "platform:/resource/SokobanRules/model/SokobanRules.ecore"

pattern isSokoban {
  figure: Figure

  sokoban: Sokoban:=figure
}

abstract rule moveSokoban {
  from: Field

  to: Field

  sokoban: Sokoban {
    -- -field -> from
    ++ -field -> to
  }
}

rule moveSokobanUp
refines moveSokoban {
  from: Field {
    -top -> to
  }
}
when freeTo

rule moveSokobanDown
refines moveSokoban {
  from: Field {
    -bottom -> to
  }
}
when freeTo

rule moveSokobanRight
refines moveSokoban {
  from: Field {
    -right -> to
  }
}
when freeTo

rule moveSokobanLeft
refines moveSokoban {
  from: Field {
    -left -> to
  }
}
when freeTo

pattern occupiedField {
  figure: Figure

  to: Field {
    -figure -> figure
  }
}

condition freeTo = forbid occupiedField

pattern occupiedNext {
  figure: Figure

  next: Field {
    -figure -> figure
  }
}

condition freeNext = forbid occupiedNext

abstract rule pushBlock {
  to: Field

  next: Field

  block: Block {
    -- -field -> to
    ++ -field -> next
  }
}

rule pushBlockUp
refines pushBlock, moveSokobanUp {
  to: Field {
    -top -> next
  }
}
when freeNext

rule pushBlockDown
refines pushBlock, moveSokobanDown {
  to: Field {
    -bottom -> next
  }
}
when freeNext

rule pushBlockLeft
refines pushBlock, moveSokobanLeft {
  to: Field {
    -left -> next
  }
}
when freeNext

rule pushBlockRight
refines pushBlock, moveSokobanRight {
  to: Field {
    -right -> next
  }
}
when freeNext
