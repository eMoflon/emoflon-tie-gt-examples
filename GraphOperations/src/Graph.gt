import "platform:/resource/GraphOperations/model/GraphOperations.ecore"
import "http://www.eclipse.org/emf/2002/Ecore"

pattern pNodeExists(nodeId : EString) {
  node : Node {
    .id == param::nodeId
  }
  graph : Graph {
    -nodes-> node
  }
}

pattern pNodeExistsRef() {
  node : Node
  graph : Graph {
    -nodes-> node
  }
}

rule pCreateNode (nodeId : EString) {
  ++ newNode : Node {
    .id := param::nodeId
  }

  graph : Graph {
    ++ -nodes-> newNode
  }

}

rule createEdge(edgeId : EString) {
  graph : Graph

  srcNode : Node {
    -graph-> graph
  }

  trgNode : Node

  ++edge : Edge {
    .id := param::edgeId
    ++ -source-> srcNode
    ++ -target-> trgNode
    ++ -graph-> graph
  }
}

rule removeEdge(edgeId : EString) {
  graph : Graph

  -- edge : Edge {
    .id == param::edgeId
    -- -graph-> graph
  }
}

rule removeEdgeRef() {
  -- edge : Edge
}

rule removeNodeRef() {
  -- node : Node
}

pattern pOutgoingEdge() {
  edge : Edge
  node : Node {
    -outgoingEdges-> edge
  }
}

pattern pIncomingEdge() {
  edge : Edge
  node : Node {
    -incomingEdges-> edge
  }
}

rule initializeEIntContainer() {
  ++ container : EIntContainer {
  }
}
